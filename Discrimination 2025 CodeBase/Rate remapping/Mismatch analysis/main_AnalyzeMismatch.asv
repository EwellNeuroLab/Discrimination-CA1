%% script to analyze mismatch
close all
rootdir_df = "F:\Included miniscope Mice\";
rootdir_gf = "D:\Grouping First\";

folders_df = ["M119\TrainingD11\" "M120\TrainingD11\" "M292\TrainingD6\" "M210\TrainingD17\" "M319\TrainingD7\"];  
folders_gs = ["M119\GroupingD6\" "M120\GroupingD6\" "M292\GroupingD3\" "M319\GroupingD4\" ];

folders_gf = ["M231\GroupingD5\" "M314\GroupingD3\" "M318\GroupingD3\" "M316\GroupingD2\" ];
folders_ds = ["M231\TrainingD9\" "M314\Training_Separation_D5\" "M318\Training_Separation_D4\" "M316\Training_Separation_D6\"];

colors = ["#CAEA3B" "#93EB74" "#BCEAC5" "#6C1FEB" "#875FEA" "#D093EB" ];

[MeanRateRew_df, RZ_ID_df, Firing_Pref_df, Prob_df,N_df] = WrapMisMatch(rootdir_df,folders_df, "Mismatch_tbl.mat");
[MeanRateRew_gs, RZ_ID_gs, Firing_Pref_gs, Prob_gs,N_gs] = WrapMisMatch(rootdir_df,folders_gs, "Mismatch_tbl.mat");

[MeanRateRew_gf, RZ_ID_gf, Firing_Pref_gf, Prob_gf,N_gf] = WrapMisMatch(rootdir_gf,folders_gf, "Mismatch_tbl.mat");
[MeanRateRew_ds, RZ_ID_ds, Firing_Pref_ds, Prob_ds,N_ds] = WrapMisMatch(rootdir_gf,folders_ds, "Mismatch_tbl.mat");

%% pool data
MeanRateRew_D = [MeanRateRew_df; MeanRateRew_ds];
MeanRateRew_G = [MeanRateRew_gf; MeanRateRew_gs];

RZ_ID_D = [RZ_ID_df; RZ_ID_ds];
RZ_ID_G = [RZ_ID_gf; RZ_ID_gs];

Firing_Pref_D = [Firing_Pref_df; Firing_Pref_ds];
Firing_Pref_G = [Firing_Pref_gf; Firing_Pref_gs];

Prob_D.To = [Prob_df.To; Prob_ds.To];
Prob_D.Away = [Prob_df.Away; Prob_ds.Away];
Prob_D.Neutral = [Prob_df.Neutral; Prob_ds.Neutral];

Prob_G.To = [Prob_gf.To; Prob_gs.To];
Prob_G.Away = [Prob_gf.Away; Prob_gs.Away];
Prob_G.Neutral = [Prob_gf.Neutral; Prob_gs.Neutral];

N_D = [N_df; N_ds];
N_G = [N_gf; N_gs];

%% get mismatch - match fields
Mismatch_df = GetMisMatchMatrix(MeanRateRew_df,RZ_ID_df,Firing_Pref_df);
Mismatch_gs = GetMisMatchMatrix(MeanRateRew_gs,RZ_ID_gs,Firing_Pref_gs);
Mismatch_gf = GetMisMatchMatrix(MeanRateRew_gf,RZ_ID_gf,Firing_Pref_gf);
Mismatch_ds = GetMisMatchMatrix(MeanRateRew_ds,RZ_ID_ds,Firing_Pref_ds);

Mismatch_D = GetMisMatchMatrix(MeanRateRew_D,RZ_ID_D,Firing_Pref_D);
Mismatch_G = GetMisMatchMatrix(MeanRateRew_G,RZ_ID_G,Firing_Pref_G);

%% count fields that are match, mismatch or neutral
cut_off = 3/4;
[N_mm_df, pop_df] = CountMM(Mismatch_df, cut_off);
[N_mm_gs, pop_gs] = CountMM(Mismatch_gs, cut_off);
[N_mm_gf, pop_gf] = CountMM(Mismatch_gf, cut_off);
[N_mm_ds, pop_ds] = CountMM(Mismatch_ds, cut_off);

[N_mm_G, pop_G] = CountMM(Mismatch_G, cut_off);
[N_mm_D, pop_D] = CountMM(Mismatch_D, cut_off);

[y_df,x_df] = ecdf(pop_df{4});
[y_gs,x_gs] = ecdf(pop_gs{4});
[y_gf,x_gf] = ecdf(pop_gf{4});
[y_ds,x_ds] = ecdf(pop_ds{4});

[y_G,x_G] = ecdf(pop_G{4});
[y_D,x_D] = ecdf(pop_D{4});


%% get firing pref  - heading probability relationship
[ProbReward_D, ProbNReward_D] =  GetProbsPorts(Prob_D, RZ_ID_D);
ProbReward_G = [Prob_G.To Prob_G.Away Prob_G.Neutral];

% bin firing preference
step = 0.2;
[binned_pref, MedianProbRew, ProbRew] =  GetBinnedPrefProb(step, Firing_Pref, ProbReward);


%% plot mis match matrices
close all
titlestr = ["D A", "D B" "G"];
figure
tiledlayout(2,2)
for i =1:2
    nexttile;
    imagesc(Mismatch_D{i})
    colormap bone
    axis square
     xticks([1 2])
    xticklabels({"ctxt A", "ctxt B"})
    title(titlestr(i))
end

nexttile;
   imagesc(Mismatch_G{1})
    colormap bone
    axis square
     xticks([1 2])
    xticklabels({"ctxt A", "ctxt B"})
    title(titlestr(i+1))

nexttile;
hold on
bar([1 12], [N_mm_D(1)+N_mm_D(3) N_mm_D(2)], "EdgeColor", colors(1), "FaceColor",colors(1), "BarWidth",0.15)
bar([3 14], [N_mm_G(1)+N_mm_G(3) N_mm_G(2)], "EdgeColor", colors(4), "FaceColor",colors(4), "BarWidth",0.15)
bar(1, N_mm_D(1), "EdgeColor", 'k', "FaceColor",'none', "BarWidth",1.5)
xticks([4 15])
xticklabels({"Context coding", "Neutral rate"})
ylabel("% of reward fields")

figure
tiledlayout(3,2)

titles = ["D 1st rewA" "D 1st rewB" "G 2nd" "G 1st" "D 2nd rewA" "D 2nd rewB"];
for i  =1:2
    nexttile;
    imagesc(Mismatch_df{i})
    colormap bone
    axis square
    xticks([1 2])
    xticklabels({"ctxt A", "ctxt B"})
    title(titles(i))
end

for i =1:2
    nexttile;
    imagesc(Mismatch_ds{i})
    colormap bone
    axis square
     xticks([1 2])
    xticklabels({"ctxt A", "ctxt B"})
     title(titles(i+4))
end

for i =1:1
    nexttile;
    imagesc(Mismatch_gs{i})
    colormap bone
    axis square
    xticks([1 2])
    xticklabels({"ctxt A", "ctxt B"})
    title(titles(i+2))
end

for i =1:1
    nexttile;
    imagesc(Mismatch_gf{i})
    colormap bone
    axis square
    xticks([1 2])
    xticklabels({"ctxt A", "ctxt B"})
    title( titles(i+3))
end


figure
hold on
bar([1 12], [N_mm_df(1)+N_mm_df(3) N_mm_df(2)], "EdgeColor", colors(2), "FaceColor",colors(2), "BarWidth",0.15)
bar([3 14], [N_mm_gs(1)+N_mm_gs(3) N_mm_gs(2)], "EdgeColor", colors(5), "FaceColor",colors(5), "BarWidth",0.15)
bar([5 16], [N_mm_gf(1)+N_mm_gf(3) N_mm_gf(2)], "EdgeColor", colors(6), "FaceColor",colors(6), "BarWidth",0.15)
bar([7 18], [N_mm_ds(1)+N_mm_ds(3) N_mm_ds(2)], "EdgeColor", colors(3), "FaceColor",colors(3), "BarWidth",0.15)
legend("D 1st", "G 2nd", "G 1 st", "D 2nd", "AutoUpdate", "off", "Location","northwest")
bar(1, N_mm_df(1), "EdgeColor", 'k', "FaceColor",'none', "BarWidth",1.5)
bar(7, N_mm_ds(1), "EdgeColor", 'k', "FaceColor",'none', "BarWidth",1.5)

xticks([4 15])
xticklabels({"Context coding", "Neutral rate"})
ylabel("% of reward fields")


%% plot events against firing preference
figure
tiledlayout(1,2)
nexttile;
plot(Firing_Pref_D, N_D, "o", Color=colors(1))
box off
xlabel("Firing Preference")
ylabel("# of events")
ylim([0 250])

nexttile;
plot(Firing_Pref_G, N_G, "o" , Color=colors(4))
box off
xlabel("Firing Preference")
ylabel("# of events")

