<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.8.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:vid="clr-namespace:Bonsai.Video;assembly=Bonsai.Video"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:cv="clr-namespace:Bonsai.Vision;assembly=Bonsai.Vision"
                 xmlns:ipy="clr-namespace:Bonsai.Scripting.IronPython;assembly=Bonsai.Scripting.IronPython"
                 xmlns:al="clr-namespace:Bonsai.Audio;assembly=Bonsai.Audio"
                 xmlns:io="clr-namespace:Bonsai.IO;assembly=Bonsai.System"
                 xmlns:res="clr-namespace:Bonsai.Resources;assembly=Bonsai.System"
                 xmlns:wie="clr-namespace:Bonsai.Windows.Input;assembly=Bonsai.Windows.Input"
                 xmlns:p1="clr-namespace:Bonsai.Miniscope;assembly=Bonsai.Miniscope"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Workflow>
    <Nodes>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="vid:VideoCaptureDevice">
          <vid:Index>1</vid:Index>
          <vid:CaptureProperties>
            <vid:CameraProperty>
              <vid:Property>Exposure</vid:Property>
              <vid:Value>-5</vid:Value>
              <vid:ControlFlags>Manual</vid:ControlFlags>
            </vid:CameraProperty>
          </vid:CaptureProperties>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>video</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:VideoWriter">
          <cv:FileName>OutputTraining\video.avi</cv:FileName>
          <cv:Suffix>Timestamp</cv:Suffix>
          <cv:Buffered>true</cv:Buffered>
          <cv:Overwrite>false</cv:Overwrite>
          <cv:FourCC>FMP4</cv:FourCC>
          <cv:FrameRate>30</cv:FrameRate>
          <cv:FrameSize>
            <cv:Width>0</cv:Width>
            <cv:Height>0</cv:Height>
          </cv:FrameSize>
          <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>video</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:CropPolygon">
          <cv:Regions>
            <cv:ArrayOfPoint>
              <cv:Point>
                <cv:X>875</cv:X>
                <cv:Y>162</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>567</cv:X>
                <cv:Y>282</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>415</cv:X>
                <cv:Y>580</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>530</cv:X>
                <cv:Y>910</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>850</cv:X>
                <cv:Y>1050</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>1181</cv:X>
                <cv:Y>925</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>1316</cv:X>
                <cv:Y>595</cv:Y>
              </cv:Point>
              <cv:Point>
                <cv:X>1180</cv:X>
                <cv:Y>290</cv:Y>
              </cv:Point>
            </cv:ArrayOfPoint>
          </cv:Regions>
          <cv:MaskType>ToZero</cv:MaskType>
          <cv:FillValue>
            <cv:Val0>255</cv:Val0>
            <cv:Val1>255</cv:Val1>
            <cv:Val2>255</cv:Val2>
            <cv:Val3>0</cv:Val3>
          </cv:FillValue>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>CroppedImg</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:RangeThreshold">
          <cv:Lower>
            <cv:Val0>1</cv:Val0>
            <cv:Val1>1</cv:Val1>
            <cv:Val2>1</cv:Val2>
            <cv:Val3>1</cv:Val3>
          </cv:Lower>
          <cv:Upper>
            <cv:Val0>50</cv:Val0>
            <cv:Val1>50</cv:Val1>
            <cv:Val2>50</cv:Val2>
            <cv:Val3>1</cv:Val3>
          </cv:Upper>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:FindContours">
          <cv:Mode>External</cv:Mode>
          <cv:Method>ChainApproxNone</cv:Method>
          <cv:Offset>
            <cv:X>0</cv:X>
            <cv:Y>0</cv:Y>
          </cv:Offset>
          <cv:MinArea xsi:nil="true" />
          <cv:MaxArea xsi:nil="true" />
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:BinaryRegionAnalysis" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:LargestBinaryRegion" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Centroid</Selector>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>MousePos</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:ElementIndex" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Index</Selector>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>FrameNumber</Name>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Trial</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="GroupWorkflow">
              <Name>GetCoordinates</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>MousePos</Name>
                  </Expression>
                  <Expression xsi:type="ipy:PythonSource">
                    <ipy:Name>Xmid</ipy:Name>
                    <ipy:Script>import random
@returns(int)
def generate():
  yield random.randint(240,670)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="ipy:PythonSource">
                    <ipy:Name>Ymid</ipy:Name>
                    <ipy:Script>import random
@returns(int)
def generate():
  yield random.randint(190,650)</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="IntProperty">
                      <Value>168</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="5" Label="Source1" />
                  <Edge From="1" To="4" Label="Source1" />
                  <Edge From="2" To="4" Label="Source2" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source2" />
                  <Edge From="5" To="6" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>Coordinates</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>Coordinates</Name>
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Name>MouseInTriggerZone?</ipy:Name>
              <ipy:Script>@returns(bool)
def process(input):
  centroid = input.Item1;
  Xmid = input.Item2.Item1;
  Ymid = input.Item2.Item2;
  size = input.Item2.Item3;
  Xmin= Xmid-round(size/2);
  Xmax = Xmid+round(size/2);
  Ymin = Ymid-round(size/2);
  Ymax = Ymid+round(size/2);
  rect = [Xmin, Ymin, Xmax, Ymax]; # [xmin ymin xmax ymax]
  if centroid.X &gt;rect[0] and centroid.X &lt; rect[2] and centroid.Y &gt; rect[1] and centroid.Y &lt; rect[3]:
    return True
  else:
    return False
</ipy:Script>
            </Expression>
            <Expression xsi:type="rx:BehaviorSubject">
              <Name>IsDetected</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:DistinctUntilChanged" />
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>DetectedFirstTime</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="Equal">
                    <Operand xsi:type="BooleanProperty">
                      <Value>true</Value>
                    </Operand>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:DistinctUntilChanged" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT1S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="al:PlaySource">
                <al:DeviceName>Generic Software on Speakers (Realtek(R) Audio)</al:DeviceName>
                <al:SourceName>
                  <al:string>soundSource</al:string>
                </al:SourceName>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>OpenPort</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>start</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="io:SerialStringWrite">
                      <io:PortName>COM3</io:PortName>
                      <io:NewLine>\r\n</io:NewLine>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>NewTrial</Name>
            </Expression>
            <Expression xsi:type="rx:Condition">
              <Name>OnlyEndMessage</Name>
              <Description>To ensure the new trial only starts when an end message was sent.</Description>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Script>@returns(bool)
def process(value):

  msg = value[0:3];
  if msg == "Cor":
    return True
  if msg == "Inc":
    return True
  if msg == "Tim":
    return True</ipy:Script>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT3S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="rx:SelectMany">
              <Name>VisualCueOn</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>ledon</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="io:SerialStringWrite">
                      <io:PortName>COM3</io:PortName>
                      <io:NewLine>\r\n</io:NewLine>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                  <Edge From="1" To="2" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:TakeUntil" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Delay">
                <rx:DueTime>PT10S</rx:DueTime>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
            <Expression xsi:type="SubscribeSubject">
              <Name>Msg</Name>
            </Expression>
            <Expression xsi:type="rx:Sink">
              <Name>ExperimentObserver</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="WorkflowInput">
                    <Name>Source1</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>FrameNumber</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Coordinates</Name>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:WithLatestFrom" />
                  </Expression>
                  <Expression xsi:type="io:CsvWriter">
                    <io:FileName>OutputTraining\EventFile.csv</io:FileName>
                    <io:Append>true</io:Append>
                    <io:Overwrite>false</io:Overwrite>
                    <io:Suffix>None</io:Suffix>
                    <io:IncludeHeader>false</io:IncludeHeader>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Name>TrialDone?</Name>
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Script>@returns(bool)
def process(value):
  msg = value.Item1[0:3]
  if(msg == "Cor"):
    return True
  if(msg == "Inc"):
    return True
  if(msg == "Tim"):
    return True</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="rx:PublishSubject">
                    <Name>Message</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Message</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item1</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="al:PauseSource">
                      <al:DeviceName>Generic Software on Speakers (Realtek(R) Audio)</al:DeviceName>
                      <al:SourceName>
                        <al:string>soundSource</al:string>
                      </al:SourceName>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="al:CreateAudioContext">
                      <al:DeviceName>Generic Software on Speakers (Realtek(R) Audio)</al:DeviceName>
                      <al:SampleRate>0</al:SampleRate>
                      <al:Refresh>0</al:Refresh>
                      <al:Position>
                        <al:X>0</al:X>
                        <al:Y>0</al:Y>
                        <al:Z>0</al:Z>
                      </al:Position>
                      <al:Velocity>
                        <al:X>0</al:X>
                        <al:Y>0</al:Y>
                        <al:Z>0</al:Z>
                      </al:Velocity>
                      <al:Direction>
                        <al:X>-0</al:X>
                        <al:Y>-0</al:Y>
                        <al:Z>-1</al:Z>
                      </al:Direction>
                      <al:Up>
                        <al:X>0</al:X>
                        <al:Y>1</al:Y>
                        <al:Z>0</al:Z>
                      </al:Up>
                      <al:Gain>1</al:Gain>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="al:AudioResources">
                      <al:Buffers>
                        <al:BufferConfiguration xsi:type="al:SoundBuffer">
                          <al:Name>sound</al:Name>
                          <al:FileName>C:\Users\ewell\Desktop\8port maze\PatternSeparation\Sound\sound10760Hz.wav</al:FileName>
                        </al:BufferConfiguration>
                      </al:Buffers>
                      <al:Sources>
                        <al:SourceConfiguration>
                          <al:Name>soundSource</al:Name>
                          <al:BufferName>sound</al:BufferName>
                          <al:Gain>1</al:Gain>
                          <al:Pitch>1</al:Pitch>
                          <al:Direction>
                            <al:X>0</al:X>
                            <al:Y>0</al:Y>
                            <al:Z>0</al:Z>
                          </al:Direction>
                          <al:Position>
                            <al:X>0</al:X>
                            <al:Y>0</al:Y>
                            <al:Z>0</al:Z>
                          </al:Position>
                          <al:Velocity>
                            <al:X>0</al:X>
                            <al:Y>0</al:Y>
                            <al:Z>0</al:Z>
                          </al:Velocity>
                          <al:Looping>true</al:Looping>
                          <al:Relative>false</al:Relative>
                          <al:State>Initial</al:State>
                        </al:SourceConfiguration>
                      </al:Sources>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="res:LoadResources" />
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="4" Label="Source1" />
                  <Edge From="1" To="3" Label="Source1" />
                  <Edge From="2" To="3" Label="Source2" />
                  <Edge From="3" To="4" Label="Source2" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="4" To="6" Label="Source1" />
                  <Edge From="6" To="7" Label="Source1" />
                  <Edge From="8" To="9" Label="Source1" />
                  <Edge From="9" To="10" Label="Source1" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="12" To="13" Label="Source1" />
                  <Edge From="13" To="14" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="rx:PublishSubject">
              <Name>NewTrial</Name>
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>VisualCueOn</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="StringProperty">
                      <Value>ledon</Value>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="io:SerialStringWrite">
                      <io:PortName>COM3</io:PortName>
                      <io:NewLine>\r\n</io:NewLine>
                    </Combinator>
                  </Expression>
                </Nodes>
                <Edges>
                  <Edge From="0" To="1" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="al:CreateAudioContext">
                <al:DeviceName>Generic Software on Speakers (Realtek(R) Audio)</al:DeviceName>
                <al:SampleRate>0</al:SampleRate>
                <al:Refresh>0</al:Refresh>
                <al:Position>
                  <al:X>0</al:X>
                  <al:Y>0</al:Y>
                  <al:Z>0</al:Z>
                </al:Position>
                <al:Velocity>
                  <al:X>0</al:X>
                  <al:Y>0</al:Y>
                  <al:Z>0</al:Z>
                </al:Velocity>
                <al:Direction>
                  <al:X>-0</al:X>
                  <al:Y>-0</al:Y>
                  <al:Z>-1</al:Z>
                </al:Direction>
                <al:Up>
                  <al:X>0</al:X>
                  <al:Y>1</al:Y>
                  <al:Z>0</al:Z>
                </al:Up>
                <al:Gain>1</al:Gain>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="al:AudioResources">
                <al:Buffers>
                  <al:BufferConfiguration xsi:type="al:SoundBuffer">
                    <al:Name>sound</al:Name>
                    <al:FileName>C:\Users\ewell\Desktop\8port maze\PatternSeparation\Sound\sound10760Hz.wav</al:FileName>
                  </al:BufferConfiguration>
                </al:Buffers>
                <al:Sources>
                  <al:SourceConfiguration>
                    <al:Name>soundSource</al:Name>
                    <al:BufferName>sound</al:BufferName>
                    <al:Gain>1</al:Gain>
                    <al:Pitch>1</al:Pitch>
                    <al:Direction>
                      <al:X>0</al:X>
                      <al:Y>0</al:Y>
                      <al:Z>0</al:Z>
                    </al:Direction>
                    <al:Position>
                      <al:X>0</al:X>
                      <al:Y>0</al:Y>
                      <al:Z>0</al:Z>
                    </al:Position>
                    <al:Velocity>
                      <al:X>0</al:X>
                      <al:Y>0</al:Y>
                      <al:Z>0</al:Z>
                    </al:Velocity>
                    <al:Looping>true</al:Looping>
                    <al:Relative>false</al:Relative>
                    <al:State>Initial</al:State>
                  </al:SourceConfiguration>
                </al:Sources>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="res:LoadResources" />
            </Expression>
            <Expression xsi:type="GroupWorkflow">
              <Name>Tracking</Name>
              <Workflow>
                <Nodes>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>MousePos</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>CroppedImg</Name>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>Coordinates</Name>
                  </Expression>
                  <Expression xsi:type="MemberSelector">
                    <Selector>Item2</Selector>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="ipy:PythonTransform">
                    <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *

# Accumulators for keeping history
trajectory = None
prevpoint = None
color = Scalar.Rgb(255,0,0)
boxcolor =Scalar.Rgb(0,0,255)
thickness = 3
thickness2 = 6
box= (50,50,150,150)


@returns(IplImage)
def process(value):
  global trajectory, prevpoint
  centroid = value.Item1
  image = value.Item2
  triggerzone = Point2f(value.Item3.Item1, value.Item3.Item2)
  radius = round(value.Item3.Item3/2)
  # Initialize trajectory image accumulator if needed
  if trajectory is None:
    trajectory = IplImage(image.Size, image.Depth, 3)
    trajectory.SetZero()

  # Draw point or line depending on whether there is a past history
  if prevpoint is None:
    
    CV.Circle(trajectory,Point(centroid),thickness,color,-1)

  else:
    CV.Circle(trajectory,Point(triggerzone),thickness,boxcolor,radius)
    CV.Line(trajectory,Point(prevpoint),Point(centroid),color,thickness)

  # Draw trajectory on top of image
  output = image.Clone()
  mask = IplImage(image.Size, image.Depth, 1)
  CV.CvtColor(trajectory,mask,ColorConversion.Bgr2Gray)
  CV.Threshold(mask,mask,0,255,ThresholdTypes.Binary)
  CV.Copy(trajectory,output,mask)

  # Update history for next drawing
  prevpoint = centroid
  return output

# Reset accumulators
def unload():
  global trajectory, prevpoint
  trajectory = None
  prevpoint = None</ipy:Script>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="wie:KeyDown">
                      <wie:Filter>LButton RButton Cancel A B C Shift</wie:Filter>
                      <wie:SuppressRepetitions>true</wie:SuppressRepetitions>
                    </Combinator>
                  </Expression>
                  <Expression xsi:type="SubscribeSubject">
                    <Name>NewTrial</Name>
                  </Expression>
                  <Expression xsi:type="rx:Condition">
                    <Workflow>
                      <Nodes>
                        <Expression xsi:type="WorkflowInput">
                          <Name>Source1</Name>
                        </Expression>
                        <Expression xsi:type="ipy:PythonTransform">
                          <ipy:Script>@returns(bool)
def process(value):
  msg = value[0:3];
  if msg == "Cor":
    return True
  if msg == "Inc":
    return True
  if msg == "Tim":
    return True</ipy:Script>
                        </Expression>
                        <Expression xsi:type="WorkflowOutput" />
                      </Nodes>
                      <Edges>
                        <Edge From="0" To="1" Label="Source1" />
                        <Edge From="1" To="2" Label="Source1" />
                      </Edges>
                    </Workflow>
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Zip" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:TakeUntil" />
                  </Expression>
                  <Expression xsi:type="Combinator">
                    <Combinator xsi:type="rx:Repeat" />
                  </Expression>
                  <Expression xsi:type="WorkflowOutput" />
                </Nodes>
                <Edges>
                  <Edge From="0" To="4" Label="Source1" />
                  <Edge From="1" To="4" Label="Source2" />
                  <Edge From="2" To="3" Label="Source1" />
                  <Edge From="3" To="4" Label="Source3" />
                  <Edge From="4" To="5" Label="Source1" />
                  <Edge From="5" To="10" Label="Source1" />
                  <Edge From="6" To="9" Label="Source1" />
                  <Edge From="7" To="8" Label="Source1" />
                  <Edge From="8" To="9" Label="Source2" />
                  <Edge From="9" To="10" Label="Source2" />
                  <Edge From="10" To="11" Label="Source1" />
                  <Edge From="11" To="12" Label="Source1" />
                </Edges>
              </Workflow>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="4" Label="Source1" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="7" Label="Source1" />
            <Edge From="7" To="8" Label="Source1" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="9" To="10" Label="Source1" />
            <Edge From="10" To="15" Label="Source1" />
            <Edge From="11" To="12" Label="Source1" />
            <Edge From="12" To="13" Label="Source1" />
            <Edge From="13" To="14" Label="Source1" />
            <Edge From="14" To="15" Label="Source2" />
            <Edge From="15" To="16" Label="Source1" />
            <Edge From="16" To="17" Label="Source1" />
            <Edge From="18" To="19" Label="Source1" />
            <Edge From="19" To="20" Label="Source1" />
            <Edge From="22" To="23" Label="Source1" />
            <Edge From="23" To="24" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Repeat" />
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Init</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:CreateSerialPort">
                <io:Name>COM3</io:Name>
                <io:PortName>COM3</io:PortName>
                <io:BaudRate>9600</io:BaudRate>
                <io:Parity>None</io:Parity>
                <io:ParityReplace>63</io:ParityReplace>
                <io:DataBits>8</io:DataBits>
                <io:StopBits>One</io:StopBits>
                <io:Handshake>None</io:Handshake>
                <io:DiscardNull>false</io:DiscardNull>
                <io:DtrEnable>false</io:DtrEnable>
                <io:RtsEnable>false</io:RtsEnable>
                <io:ReadBufferSize>4096</io:ReadBufferSize>
                <io:WriteBufferSize>2048</io:WriteBufferSize>
                <io:ReceivedBytesThreshold>1</io:ReceivedBytesThreshold>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT0S</rx:DueTime>
                <rx:Period>PT1H</rx:Period>
              </Combinator>
            </Expression>
          </Nodes>
          <Edges />
        </Workflow>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>SavePosition</Name>
        <Workflow>
          <Nodes>
            <Expression xsi:type="SubscribeSubject">
              <Name>FrameNumber</Name>
            </Expression>
            <Expression xsi:type="SubscribeSubject">
              <Name>MousePos</Name>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>OutputTraining\Position.csv</io:FileName>
              <io:Append>true</io:Append>
              <io:Overwrite>true</io:Overwrite>
              <io:Suffix>Timestamp</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
          </Nodes>
          <Edges>
            <Edge From="0" To="2" Label="Source1" />
            <Edge From="1" To="2" Label="Source2" />
            <Edge From="2" To="3" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="p1:UCLAMiniscopeV4">
          <p1:Index>1</p1:Index>
          <p1:LEDBrightness>20</p1:LEDBrightness>
          <p1:EWL>-15</p1:EWL>
          <p1:SensorGain>LOW</p1:SensorGain>
          <p1:FramesPerSecond>FPS20</p1:FramesPerSecond>
        </Combinator>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Image</Selector>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>msFrame</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:BackgroundSubtraction">
          <cv:BackgroundFrames>1</cv:BackgroundFrames>
          <cv:AdaptationRate>0</cv:AdaptationRate>
          <cv:ThresholdValue>6</cv:ThresholdValue>
          <cv:ThresholdType>Binary</cv:ThresholdType>
          <cv:SubtractionMethod>Absolute</cv:SubtractionMethod>
        </Combinator>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>FrameNumber</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:ElementIndex" />
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Index</Selector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:WithLatestFrom" />
      </Expression>
      <Expression xsi:type="io:CsvWriter">
        <io:FileName>OutputTraining\ts.csv</io:FileName>
        <io:Append>false</io:Append>
        <io:Overwrite>false</io:Overwrite>
        <io:Suffix>Timestamp</io:Suffix>
        <io:IncludeHeader>false</io:IncludeHeader>
      </Expression>
      <Expression xsi:type="MemberSelector">
        <Selector>Quaternion</Selector>
      </Expression>
      <Expression xsi:type="GroupWorkflow">
        <Name>Commutator</Name>
        <Description>Drives ONIX Commutator from BNO055 Quaterion data. Pressing down/up keys will manually turn the commutator, overrding the BNO055 heading input.
</Description>
        <Workflow>
          <Nodes>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>Up</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>"{turn : 0.1}"</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="wie:KeyDown">
                <wie:Filter>Down</wie:Filter>
                <wie:SuppressRepetitions>false</wie:SuppressRepetitions>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="StringProperty">
                <Value>"{turn : -0.1}"</Value>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowInput">
              <Name>Source1</Name>
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Name>Heading</ipy:Name>
              <ipy:Script>import clr
clr.AddReference("OpenCV.Net")
from OpenCV.Net import *
from math import atan2
@returns(float)
def process(value):

  q0 = value[0].Val0;
  q1 = value[1].Val0;
  q2 = value[2].Val0;
  q3 = value[3].Val0;

  return atan2((2 * (q0 * q3 + q1 * q2)), (1 - 2 * (q2**2 + q3**2)))</ipy:Script>
            </Expression>
            <Expression xsi:type="io:CsvWriter">
              <io:FileName>OutputTraining\heading_.csv</io:FileName>
              <io:Append>false</io:Append>
              <io:Overwrite>false</io:Overwrite>
              <io:Suffix>Timestamp</io:Suffix>
              <io:IncludeHeader>false</io:IncludeHeader>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Timer">
                <rx:DueTime>PT0S</rx:DueTime>
                <rx:Period>PT0.1S</rx:Period>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Sample" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Skip">
                <rx:Count>1</rx:Count>
              </Combinator>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Zip" />
            </Expression>
            <Expression xsi:type="ipy:PythonTransform">
              <ipy:Script>from math import pi

@returns(str)
def process(value):
  
  
  last = value.Item2

  curr = value.Item1
  a1 = curr + 2 * pi
  a2 = curr - 2 * pi
  pos = [curr, a1, a2]

  delta = [abs(x - last) for x in pos]

  p = pos[delta.index(min(delta))]

  turn = (p - last) / (2 * pi)

  return "{turn : %s}" % turn</ipy:Script>
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="rx:Merge" />
            </Expression>
            <Expression xsi:type="ExternalizedMapping">
              <Property Name="PortName" />
            </Expression>
            <Expression xsi:type="Combinator">
              <Combinator xsi:type="io:SerialStringWrite">
                <io:PortName>COM4</io:PortName>
                <io:NewLine>\r\n</io:NewLine>
              </Combinator>
            </Expression>
            <Expression xsi:type="WorkflowOutput" />
          </Nodes>
          <Edges>
            <Edge From="0" To="1" Label="Source1" />
            <Edge From="1" To="12" Label="Source1" />
            <Edge From="2" To="3" Label="Source1" />
            <Edge From="3" To="12" Label="Source2" />
            <Edge From="4" To="5" Label="Source1" />
            <Edge From="5" To="6" Label="Source1" />
            <Edge From="6" To="8" Label="Source1" />
            <Edge From="7" To="8" Label="Source2" />
            <Edge From="8" To="9" Label="Source1" />
            <Edge From="8" To="10" Label="Source1" />
            <Edge From="9" To="10" Label="Source2" />
            <Edge From="10" To="11" Label="Source1" />
            <Edge From="11" To="12" Label="Source3" />
            <Edge From="12" To="14" Label="Source1" />
            <Edge From="13" To="14" Label="Source2" />
            <Edge From="14" To="15" Label="Source1" />
          </Edges>
        </Workflow>
      </Expression>
      <Expression xsi:type="SubscribeSubject">
        <Name>msFrame</Name>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="cv:VideoWriter">
          <cv:FileName>OutputTraining\msCam.avi</cv:FileName>
          <cv:Suffix>FileCount</cv:Suffix>
          <cv:Buffered>true</cv:Buffered>
          <cv:Overwrite>false</cv:Overwrite>
          <cv:FourCC>FFmpeg</cv:FourCC>
          <cv:FrameRate>20</cv:FrameRate>
          <cv:FrameSize>
            <cv:Width>0</cv:Width>
            <cv:Height>0</cv:Height>
          </cv:FrameSize>
          <cv:ResizeInterpolation>NearestNeighbor</cv:ResizeInterpolation>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Timer">
          <rx:DueTime>PT59S</rx:DueTime>
          <rx:Period>PT0S</rx:Period>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:TakeUntil" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Repeat" />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="io:SerialStringRead">
          <io:PortName>COM3</io:PortName>
          <io:NewLine>\r\n</io:NewLine>
        </Combinator>
      </Expression>
      <Expression xsi:type="rx:PublishSubject">
        <Name>Msg</Name>
      </Expression>
    </Nodes>
    <Edges>
      <Edge From="0" To="1" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="3" To="4" Label="Source1" />
      <Edge From="3" To="12" Label="Source1" />
      <Edge From="4" To="5" Label="Source1" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source1" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="12" To="13" Label="Source1" />
      <Edge From="13" To="14" Label="Source1" />
      <Edge From="15" To="16" Label="Source1" />
      <Edge From="19" To="20" Label="Source1" />
      <Edge From="19" To="24" Label="Source1" />
      <Edge From="19" To="28" Label="Source1" />
      <Edge From="20" To="21" Label="Source1" />
      <Edge From="21" To="22" Label="Source1" />
      <Edge From="23" To="26" Label="Source1" />
      <Edge From="24" To="25" Label="Source1" />
      <Edge From="25" To="26" Label="Source2" />
      <Edge From="26" To="27" Label="Source1" />
      <Edge From="28" To="29" Label="Source1" />
      <Edge From="30" To="31" Label="Source1" />
      <Edge From="31" To="33" Label="Source1" />
      <Edge From="32" To="33" Label="Source2" />
      <Edge From="33" To="34" Label="Source1" />
      <Edge From="35" To="36" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>
